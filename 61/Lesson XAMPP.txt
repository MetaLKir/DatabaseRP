Основные команды -> CRUD: CREATE, READ, UPDATE, DELETE

ALTER - редактируем таблицы

======================================
mySQL -u root -p

SHOW DATABASES;

CREATE DATABASE carmiel2025; // нельзя с пробелами
CREATE DATABASE carmiel_2025;
CREATE DATABASE `carmiel 2025`; 
// можно с пробелом через обратные кавычки (клавиша тильды)
CREATE DATABASE carmiel 2025;  // this not works

SHOW WARNINGS;

USE carmiel_2025;

CREATE DATABASE IF NOT EXISTS carmiel_2025; // юзаем почаще при создании

DROP DATABASE carmiel2025;

DROP DATABASE IF EXISTS carmiel2025;

--WOW // два дефиса чтобы написать коммент
/*
WOW
*/
// строчный комментарий

/*!   внутренняя информация

SHOW CREATE DATABASE carmiel_2025; // покажи как создавалась эта датабаза

SHOW CREATE DATABASE carmiel_2025\G 
// на конце вместо ; чтобы показать строчкой, а не табличкой

SHOW TABLES;

CREATE TABLE IF NOT EXISTS products(
productID INT UNSIGNED NOT NULL AUTO_INCREMENT,
productCode CHAR(3) NOT NULL DEFAULT '',
name VARCHAR(30) NOT NULL DEFAULT '',
quantity INT UNSIGNED NOT NULL DEFAULT 0,
price DECIMAL(7,2) NOT NULL DEFAULT 99999.99,
PRIMARY KEY(productID));

// не ставить табы, его съест движок

DESCRIBE products;

==================TYPES=====================
1. NUMERIC
TINYINT(n) -128 127 (UNSIGNED 0 255)
SMALLINT(n) -32768 32767 (UNSIGNED 0 65535)
MEDIUMINT(n) -8,388,608   8,388,607 (UNSIGNED 0   16,777,215)
INT(n) / INTEGER(n) -2,147,483,648   2,147,483,647
BIGINT(n) // аналог long

2. ДРОБНЫЕ
DECIMAL(m, d) / NUMERIC(m, d)
FLOAT(m, d)
DOUBLE(m, d) / REAL

3. СТРОКОВЫЕ
CHAR(n) 255 // должно быть столько символов, сколько указано
VARCHAR(n) 65535 // сколько угодно символов в указанном лимите

4. ТЕКСТОВЫЕ ДАННЫЕ
TINYTEXT 255 // как VARCHAR, только меньше размером
TEXT 65535
MEDIUMTEXT 16,777,215
LONGTEXT 4,294,967,295

5. ДЛЯ БИНАРНЫХ ДАННЫХ
TINYBLOD 255 bytes
BLOB 64 KB
MEDIUMBLOB 16 MB
LONGBLOB 4 GB

6. DATE AND TIME
DATE YYYY-MM-DD (from 1000-01-01 to 9999-12-31)
DATETIME YYYY-MM-DD HH:MM:SS
TIMESTAMP YYYY-MM-DD HH:MM:SS (from 1970-01-01 00:00:01 to 2038-01-19 03:14:07)
TIME HH:MM:SS
YEAR YYYY (from 1901 to 2155)

7. BOOLEAN
BOOLEAN / BOOL (TINYINT) 0 FALSE 1 TRUE

8. json
JSON // stores JSON objects

9. Spatial (geography / geometry)
GEOMETRY
POINT (x, y)
LINESTRING
POLYGON

====================LOGICAL OPERATORS==========================
AND
OR
NOT
BETWEEN 	// is in range // 5 BETWEEN 3 AND 10
IN 		// is in list // 5 IN (3,10); no!!!
IS NULL
====================ARITHMETIC OPERATORS==========================
+
*
-
/
%
DIV (in Python //)	// челочисленное деление
====================COMPARISON OPERATORS==========================
=
>
<
>=
<=
!=   <> 	// два способа написания // age!=30	age<>30

==================================================
SHOW CREATE TABLE products;
SHOW CREATE TABLE products\G
DESCRIBE products; // this displays better

INSERT INTO products VALUES(
1001, 'PEN', 'PEN Red', 5000, 1.23);

SELECT * FROM products;

INSERT INTO products VALUES
(NULL, "PEN", "Pen Blue", 8000, 1.25),
(NULL, "PEN", "Pen Black", 2000, 1.25);

INSERT INTO products(productCode, name, quantity, price) VALUES
('PEC', 'Pencil 2B', 10000, 0.48);

INSERT INTO products(price, productCode, name, quantity) VALUES
(0.49, 'PEC', 'Pencil 2H', 8000);

INSERT INTO products(productCode, name) VALUES
('PEC', 'Pencil HB');

INSERT INTO products VALUES
(NULL,NULL,NULL,NULL,NULL);

INSERT INTO products(productCode, name, quantity, price) VALUES
('PEC', 'Pencil M', 6000, 0.52),
('PEN', 'Pen Dark Blue', 6000, 1.52),
('PEN', 'Pen Grey', 1500, 1.25);

DELETE FROM products WHERE productID=1005;

INSERT INTO products VALUES
(1005, 'PEN', 'PEN Yellow', 3000, 1.35);

SELECT * FROM products;

SELECT * FROM products WHERE productID>1005;
SELECT * FROM products WHERE price BETWEEN 1.25 AND 1.35;

SELECT name, price FROM products WHERE price BETWEEN 1.25 AND 1.35;

SELECT name, price+5 FROM products;

=======================================================
SELECT 1+1;
SELECT NOW();
SELECT NOW(), 1+1;
=======================================================
SELECT * FROM products WHERE productCode='PEC';

=======================================================
LIKE
NOT LIKE
_ 	any one symbol
% 	any quantity any symbols
// like regex

SELECT name, price FROM products WHERE name LIKE 'Penc%'; 
// don't care about register

===================================
1. all pencils amount of which > 7000
2. all products of blue color
3. all products with 'H' in name

SELECT * FROM products WHERE quantity>7000 AND productCode='PEN';
SELECT * FROM products WHERE name LIKE '%blue%';
SELECT * FROM products WHERE name LIKE '%H%';

INSERT INTO products VALUES(
NULL, 'PEN', 'Pen', 3000, 1.35);
INSERT INTO products VALUES(
NULL, 'PEC', 'XXX', 3000, 1.35);

SELECT * FROM products WHERE name LIKE '___';

========================================
week_days
1. Sunday
2. Monday
3. Tuesday
4. Wednesday
5. Thursday
6. Friday
7. Saturday

CREATE TABLE IF NOT EXISTS products(
productID INT UNSIGNED NOT NULL AUTO_INCREMENT,
productCode CHAR(3) NOT NULL DEFAULT '',
name VARCHAR(30) NOT NULL DEFAULT '',
quantity INT UNSIGNED NOT NULL DEFAULT 0,
price DECIMAL(7,2) NOT NULL DEFAULT 99999.99,
PRIMARY KEY(productID));


CREATE TABLE IF NOT EXISTS week_days(
dayNum INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
dayName VARCHAR(10) NOT NULL DEFAULT '');

INSERT INTO week_days VALUES
(1, 'Sunday'),
(2, 'Monday'),
(3, 'Tuesday'),
(4, 'Wednesday'),
(5, 'Thursday'),
(6, 'Friday'),
(7, 'Saturday');

CREATE TABLE IF NOT EXISTS week_days_1(
dayNum INT UNSIGNED NOT NULL,
dayName VARCHAR(10) NOT NULL DEFAULT '' PRIMARY KEY);

INSERT INTO week_days_1 VALUES
(1, 'Sunday'),
(2, 'Monday'),
(3, 'Tuesday'),
(4, 'Wednesday'),
(5, 'Thursday'),
(6, 'Friday'),
(7, 'Saturday');

SELECT dayName FROM week_days WHERE CHAR_LENGTH(dayName) < 7;

=================================================
OR AND XOR
TRUE OR TRUE -> TRUE
TRUE AND TRUE -> TRUE
TRUE XOR TRUE -> FALSE

TRUE OR FALSE -> TRUE
TRUE AND FALSE -> FALSE
TRUE XOR FALSE -> TRUE

FALSE OR FALSE -> FALSE
FALSE AND FALSE -> FALSE
FALSE XOR FALSE -> FALSE

XOR - only one condition is true, other must be false
discount>10 XOR free_shipping=TRUE
